<modification>
	<id><![CDATA[shopme theme]]></id>
	<version><![CDATA[1.0]]></version>
	<vqmver><![CDATA[2.X]]></vqmver>
	<author><![CDATA[Karl Pers - Openthemer.com]]></author>
	<file name="catalog/controller/common/home.php">
		<operation>
			<search position="before"><![CDATA[
			$data['column_left'] = $this->load->controller('common/column_left');
			]]></search>
			<add><![CDATA[
			$data['home_top'] = $this->load->controller('common/home_top');
			$data['home_bottom'] = $this->load->controller('common/home_bottom');
		]]></add>
		</operation>
		</file>
		<file name="catalog/controller/common/header.php">
		<operation>
			<search position="before"><![CDATA[$this->load->language('common/header');]]></search>
			<add><![CDATA[		// shopme custom code start
		$this->load->language('common/shopme');
		$this->load->language('common/footer');
		$data['shopme_text_mobile_menu'] = $this->language->get('shopme_text_mobile_menu');
		$data['shopme_account'] = $this->language->get('shopme_account');
		$data['text_contact'] = $this->language->get('text_contact');
		$data['popup_login_href'] = $this->url->link('common/popup_login', '', 'SSL');
		if ($this->customer->isLogged()) {
			$data['text_welcome'] = sprintf($this->language->get('text_welcome_logged'), $this->url->link('account/account', '', 'SSL'), $this->url->link('account/logout', '', 'SSL'));
		} else {
			$data['text_welcome'] = sprintf($this->language->get('text_welcome'), $this->url->link('common/popup_login', '', 'SSL'), $this->url->link('account/register', '', 'SSL'));
		}
		// Shopme ends
		]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
			$data['title'] = $this->document->getTitle();
			]]></search>
			<add><![CDATA[
			if ($this->config->get('shopme_use_custom_font')) {
			$this->document->addStyle('//fonts.googleapis.com/css?family=' . $this->config->get('shopme_font1_import'));
			} else {
			$this->document->addStyle('//fonts.googleapis.com/css?family=Roboto:300,400,700,900');
			}
			$data['shopme_styles'] = $this->load->controller('common/shopme_styles');
			$data['shopme_cookie'] = $this->load->controller('common/shopme_cookie');	
			$data['header_wishlist_compare'] = $this->load->controller('common/header_wishlist_compare');
			$data['header_mini_menu'] = $this->load->controller('common/header_mini_menu');
			$shopme_top_promo = $this->config->get('shopme_top_promo_message');
			if(empty($shopme_top_promo[$this->language->get('code')])) {
				$data['shopme_top_promo_message'] = false;
			} else if (isset($shopme_top_promo[$this->language->get('code')])) {
				$data['shopme_top_promo_message'] = html_entity_decode($shopme_top_promo[$this->language->get('code')], ENT_QUOTES, 'UTF-8');
			}
			// Shopme ends
		]]></add>
		</operation>
	</file>
	<file name="catalog/controller/product/product.php">
		<operation>
			<search position="after"><![CDATA[$this->load->model('tool/image');]]></search>
			<add><![CDATA[
			if (file_exists('catalog/view/theme/shopme/js/countdown/jquery.countdown_' . $this->language->get('code') . '.js')) {
		$this->document->addScript('catalog/view/theme/shopme/js/countdown/jquery.countdown_' . $this->language->get('code') . '.js');
		} else {
		$this->document->addScript('catalog/view/theme/shopme/js/countdown/jquery.countdown_en.js');
		}
		$data['direction'] = $this->language->get('direction');
		]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
			$this->document->addScript('catalog/view/javascript/jquery/magnific/jquery.magnific-popup.min.js');
			]]></search>
			<add></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
			$this->document->addStyle('catalog/view/javascript/jquery/magnific/magnific-popup.css');
			]]></search>
			<add></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
			$data['special'] = $this->currency->format($this->tax->calculate($product_info['special'], $product_info['tax_class_id'], $this->config->get('config_tax')));
			]]></search>
			<add><![CDATA[
			  $data['sales_percantage_main'] = round((($product_info['price'] - $product_info['special']) / $product_info['price'] * 100));
			  // Shopme ends
			   ]]></add>
		</operation>		
		<operation>
			<search position="before"><![CDATA[$data['products'][] = array(]]></search>
			<add><![CDATA[
			  if ((float)$result['special']) {
				$sales_percantage = ((($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')))-($this->tax->calculate($result['special'], $result['tax_class_id'], $this->config->get('config_tax'))))/(($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')))/100));
				} else {
				$sales_percantage = false;
				}
				// Shopme ends
			   ]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
			$discounts = $this->model_catalog_product->getProductDiscounts($this->request->get['product_id']);
			]]></search>
			<add><![CDATA[
			// Shopme start
			if ((float)$product_info['special']) {
    		$special_info = $this->model_catalog_product->getSpecialPriceEnd($product_id);
        	$data['special_date_end'] = strtotime($special_info['date_end']) - time();
			$data['yousave'] = $this->currency->format(($this->tax->calculate($product_info['price'], $product_info['tax_class_id'], $this->config->get('config_tax')))-($this->tax->calculate($product_info['special'], $product_info['tax_class_id'], $this->config->get('config_tax'))));
    		} else {
        	$data['special_date_end'] = false;
    		}
			$this->load->language('common/shopme');
			$data['text_special_price'] = $this->language->get('text_special_price');
			$data['text_old_price'] = $this->language->get('text_old_price');
			$data['text_you_save'] = $this->language->get('text_you_save');
			$data['text_expire'] = $this->language->get('text_expire');
			$data['text_items_sold'] = sprintf($this->language->get('text_items_sold'), $this->model_catalog_product->getItemsSold($product_id));
			$data['data_qty'] = $product_info['quantity'];
			$data['text_stock_quantity'] = sprintf($this->language->get('text_stock_quantity'), $product_info['quantity']);
			$data['count_reviews'] = $product_info['reviews'];
			$data['meta_desc'] = $product_info['meta_description'];			
			$data['currency_code'] = $this->currency->getCode();
			$data['lang'] = $this->language->get('code');
			// Shopme end
			   ]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA['special'     => $special,]]></search>
			<add><![CDATA[
			 'sales_percantage' => number_format($sales_percantage, 0, ',', '.'),			 
			// Shopme ends
			   ]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[$data['images'] = array();]]></search>
			<add><![CDATA[// Start cloud zoom
if ($product_info['image']) {
$data['small'] = $this->model_tool_image->resize($product_info['image'], $this->config->get('config_image_additional_width'), $this->config->get('config_image_additional_height'));
} else {
$data['small'] = '';
}
// Shopme ends
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA['thumb' => $this->model_tool_image->resize($result['image'], $this->config->get('config_image_additional_width'), $this->config->get('config_image_additional_height'))]]></search>
			<add><![CDATA[// Cloud zoom thumb start
'small' => $this->model_tool_image->resize($result['image'], $this->config->get('config_image_additional_width'), $this->config->get('config_image_additional_height')),
//Cloud zoom thumb ends
// New thumb function
'thumb' => $this->model_tool_image->resize($result['image'], $this->config->get('config_image_thumb_width'), $this->config->get('config_image_thumb_height'))
// Shopme ends
]]></add>
		</operation>
	</file>
	<file name="catalog/language/*/common/cart.php" error="skip">
		<operation>
			<search position="before"><![CDATA[
			$_['text_recurring']
			]]></search>
			<add>
	$_['text_items'] = '&lt;span class=&quot;count&quot;&gt;%s&lt;/span&gt; &lt;span class=&quot;total&quot;&gt;%s&lt;/span&gt;';
			</add>
		</operation>
	</file>
	<file name="catalog/controller/common/cart.php" error="skip">
		<operation>
			<search position="after"><![CDATA[
			$this->load->language('common/cart');
			]]></search>
			<add>
	$this->load->language('common/shopme');
	$data['shopme_text_mycart'] = $this->language->get('shopme_text_mycart');
			</add>
		</operation>
	</file>
	<file name="catalog/language/*/checkout/cart.php" error="skip">
		<operation>
			<search position="before"><![CDATA[
			$_['error_stock']
			]]></search>
			<add>
	$_['text_items'] = '&lt;span class=&quot;count&quot;&gt;%s&lt;/span&gt; &lt;span class=&quot;total&quot;&gt;%s&lt;/span&gt;';
			</add>
		</operation>
	</file>
	<file name="catalog/language/*/account/wishlist.php" error="skip">
		<operation>
			<search position="before"><![CDATA[
			$_['text_empty']
			]]></search>
			<add>
	$_['text_header_wishlist'] = '&lt;span class=&quot;count&quot;&gt;%s&lt;/span&gt;';
			</add>
		</operation>
	</file>
	<file name="catalog/language/*/product/compare.php" error="skip">
		<operation>
			<search position="before"><![CDATA[
			$_['text_empty']
			]]></search>
			<add>
	$_['text_header_compare'] = '&lt;span class=&quot;count&quot;&gt;%s&lt;/span&gt;';
			</add>
		</operation>
	</file>
	<file name="catalog/controller/account/wishlist.php" error="log">
		<operation>
			<search position="after"><![CDATA[
			$json['total'] = sprintf($this->language->get('text_wishlist'), (isset($this->session->data['wishlist']) ? count($this->session->data['wishlist']) : 0));
			]]></search>
			<add>
	$json['wishlist_total'] = sprintf($this->language->get('text_header_wishlist'), (isset($this->session->data['wishlist']) ? count($this->session->data['wishlist']) : 0));
	
	$this->load->model('tool/image');
	if ($product_info['image'])	{
	$json['image'] = $this->model_tool_image->resize($product_info['image'], 80, 80);
	} else {
	$json['image'] = $this->model_tool_image->resize('placeholder.png', 80, 80);
	}
	if ($this->customer->isLogged()) {
	$json['text_wishlist'] = $this->language->get('heading_title');
	} else {
	$json['text_wishlist'] = $this->language->get('button_login');
	}
	$json['link_wishlist'] = $this->url->link('account/wishlist', '', 'SSL');
	
			</add>
		</operation>
	</file>
	<file name="catalog/controller/product/compare.php" error="log">
		<operation>
			<search position="after"><![CDATA[
			$json['total'] = sprintf($this->language->get('text_compare'), (isset($this->session->data['compare']) ? count($this->session->data['compare']) : 0));
			]]></search>
			<add>
	$json['compare_total'] = sprintf($this->language->get('text_header_compare'), (isset($this->session->data['compare']) ? count($this->session->data['compare']) : 0));
	$this->load->model('tool/image');
	if ($product_info['image'])	{
	$json['image'] = $this->model_tool_image->resize($product_info['image'], 80, 80);
	} else {
	$json['image'] = $this->model_tool_image->resize('placeholder.png', 80, 80);
	}
	$json['text_compare'] = $this->language->get('heading_title');
	$json['link_compare'] = $this->url->link('product/compare', '', 'SSL');
			</add>
		</operation>
	</file>
	<file name="catalog/controller/checkout/cart.php" error="skip">
		<operation>
			<search position="after"><![CDATA[
			$this->cart->add($this->request->post['product_id'], $quantity, $option, $recurring_id);
			]]></search>
			<add>
				$this->load->model('tool/image');
				if ($product_info['image'])	{
				$json['image'] = $this->model_tool_image->resize($product_info['image'], 80, 80);
				} else {
				$json['image'] = $this->model_tool_image->resize('placeholder.png', 80, 80);
				}
				$this->load->language('common/cart');
				$json['text_checkout'] = $this->language->get('text_checkout');
				$json['text_cart'] = $this->language->get('text_cart');
				$json['link_checkout'] = $this->url->link('checkout/checkout', '', 'SSL');
				$json['link_cart'] = $this->url->link('checkout/cart', '', 'SSL');
			</add>
		</operation>
	</file>
	<file name="catalog/controller/common/footer.php" error="log">
		<operation error="log">
			<search position="after"><![CDATA[
			$this->load->model('catalog/information');
			]]></search>
			<add>
			$data['live_search'] = $this->load->controller('module/d_ajax_search');
			$data['footer_modules'] = $this->load->controller('common/footer_modules');
			$data['side_widgets'] = $this->load->controller('common/side_widgets');
			$shopme_footer_block = $this->config->get('shopme_footer_custom_block');
			if(empty($shopme_footer_block[$this->language->get('code')])) {
				$data['shopme_footer_custom_block'] = false;
			} else if (isset($shopme_footer_block[$this->language->get('code')])) {
				$data['shopme_footer_custom_block'] = html_entity_decode($shopme_footer_block[$this->language->get('code')], ENT_QUOTES, 'UTF-8');
			}
			
			</add>
		</operation>
	</file>
	<file name="catalog/controller/product/category.php" error="log">
		<operation>
			<search position="before"><![CDATA[$data['products'][] = array(]]></search>
			<add><![CDATA[
			// Shopme custom code starts	
			  if ((float)$result['special']) {
				$sales_percantage = ((($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')))-($this->tax->calculate($result['special'], $result['tax_class_id'], $this->config->get('config_tax'))))/(($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')))/100));
				} else {
				$sales_percantage = false;
				}
				if ((float)$result['special']) {
    			$special_info = $this->model_catalog_product->getSpecialPriceEnd($result['product_id']);
        		$special_date_end = strtotime($special_info['date_end']) - time();
    			} else {
        		$special_date_end = false;
    			}
				$images = $this->model_catalog_product->getProductImages($result['product_id']);
            	if(isset($images[0]['image']) && !empty($images[0]['image'])){
                 $images =$images[0]['image'];
               } else {
				$images = false;
				}
				// shopme end
			   ]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA['special'     => $special,]]></search>
			<add><![CDATA[
			// Shopme custom code starts	
			  'sales_percantage' => number_format($sales_percantage, 0, ',', '.'),
			  'special_date_end' => $special_date_end,
			  'thumb_hover'  => $this->model_tool_image->resize($images, $this->config->get('config_image_product_width'), $this->config->get('config_image_product_height')),
			  // Shopme custom code ends
			   ]]></add>
		</operation>
		<operation error="log">
			<search position="before"><![CDATA[
			$data['categories'][] = array(
			]]></search>
			<add>
			if ($result['image']) {
			$image = $this->model_tool_image->resize($result['image'], $this->config->get('shopme_refine_image_w'), $this->config->get('shopme_refine_image_h'));
			} else {
			$image = $this->model_tool_image->resize('placeholder.png', $this->config->get('shopme_refine_image_w'), $this->config->get('shopme_refine_image_h'));
			}	
			</add>
		</operation>
		<operation error="log">
			<search position="after"><![CDATA[
			$data['categories'][] = array(
			]]></search>
			<add>
	'thumb' => $image,
			</add>
		</operation>
		<operation>
			<search position="after"><![CDATA[$this->load->model('tool/image');]]></search>
			<add><![CDATA[
			if (file_exists('catalog/view/theme/shopme/js/countdown/jquery.countdown_' . $this->language->get('code') . '.js')) {
		$this->document->addScript('catalog/view/theme/shopme/js/countdown/jquery.countdown_' . $this->language->get('code') . '.js');
		} else {
		$this->document->addScript('catalog/view/theme/shopme/js/countdown/jquery.countdown_en.js');
		}
		]]></add>
		</operation>
	</file>
	<file name="catalog/controller/product/manufacturer.php">
		<operation>
			<search position="after"><![CDATA[$this->load->model('tool/image');]]></search>
			<add><![CDATA[
			if (file_exists('catalog/view/theme/shopme/js/countdown/jquery.countdown_' . $this->language->get('code') . '.js')) {
		$this->document->addScript('catalog/view/theme/shopme/js/countdown/jquery.countdown_' . $this->language->get('code') . '.js');
		} else {
		$this->document->addScript('catalog/view/theme/shopme/js/countdown/jquery.countdown_en.js');
		}
		]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[$data['products'][] = array(]]></search>
			<add><![CDATA[
			// Shopme custom code starts
			  if ((float)$result['special']) {
				$sales_percantage = ((($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')))-($this->tax->calculate($result['special'], $result['tax_class_id'], $this->config->get('config_tax'))))/(($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')))/100));
				} else {
				$sales_percantage = false;
				}
			  if ((float)$result['special']) {
    			$special_info = $this->model_catalog_product->getSpecialPriceEnd($result['product_id']);
        		$special_date_end = strtotime($special_info['date_end']) - time();
    			} else {
        		$special_date_end = false;
    			}
				$images = $this->model_catalog_product->getProductImages($result['product_id']);
            	if(isset($images[0]['image']) && !empty($images[0]['image'])){
                 $images =$images[0]['image'];
               } else {
				$images = false;
				}
				// Shopme custom code ends
			   ]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA['special'     => $special,]]></search>
			<add><![CDATA[
			// Shopme custom code starts	
			  'sales_percantage' => number_format($sales_percantage, 0, ',', '.'),
			  'special_date_end' => $special_date_end,
			  'stock_quantity' => sprintf($this->language->get('text_category_stock_quantity'), (int)$result['quantity']),
			  'thumb_hover'  => $this->model_tool_image->resize($images, $this->config->get('config_image_product_width'), $this->config->get('config_image_product_height')),
			  // Shopme custom code ends
			   ]]></add>
		</operation>
		<operation error="log">
			<search position="before"><![CDATA[
			$data['categories'][$key]['manufacturer'][] = array(
			]]></search>
			<add>
			$image = $this->model_tool_image->resize($result['image'], $this->config->get('shopme_brands_image_w'), $this->config->get('shopme_brands_image_h'));
			</add>
		</operation>
		<operation error="log">
			<search position="after"><![CDATA[
			$data['categories'][$key]['manufacturer'][] = array(
			]]></search>
			<add>
	'thumb' => $image,
			</add>
		</operation>
	</file>
	<file name="catalog/controller/product/special.php">
		<operation>
			<search position="after"><![CDATA[$this->load->model('tool/image');]]></search>
			<add><![CDATA[
			if (file_exists('catalog/view/theme/shopme/js/countdown/jquery.countdown_' . $this->language->get('code') . '.js')) {
		$this->document->addScript('catalog/view/theme/shopme/js/countdown/jquery.countdown_' . $this->language->get('code') . '.js');
		} else {
		$this->document->addScript('catalog/view/theme/shopme/js/countdown/jquery.countdown_en.js');
		}
		]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[$data['products'][] = array(]]></search>
			<add><![CDATA[
			// Shopme custom code starts	
			  if ((float)$result['special']) {
				$sales_percantage = ((($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')))-($this->tax->calculate($result['special'], $result['tax_class_id'], $this->config->get('config_tax'))))/(($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')))/100));
				} else {
				$sales_percantage = false;
				}
			  if ((float)$result['special']) {
    			$special_info = $this->model_catalog_product->getSpecialPriceEnd($result['product_id']);
        		$special_date_end = strtotime($special_info['date_end']) - time();
    			} else {
        		$special_date_end = false;
    			}
				$images = $this->model_catalog_product->getProductImages($result['product_id']);
            	if(isset($images[0]['image']) && !empty($images[0]['image'])){
                 $images =$images[0]['image'];
               } else {
				$images = false;
				}
				// Shopme custom code ends
			   ]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA['special'     => $special,]]></search>
			<add><![CDATA[
			// Shopme custom code starts	
			  'sales_percantage' => number_format($sales_percantage, 0, ',', '.'),
			  'special_date_end' => $special_date_end,
			  'stock_quantity' => sprintf($this->language->get('text_category_stock_quantity'), (int)$result['quantity']),
			  'thumb_hover'  => $this->model_tool_image->resize($images, $this->config->get('config_image_product_width'), $this->config->get('config_image_product_height')),
			  // Shopme custom code ends
			   ]]></add>
		</operation>
	</file>
	<file name="catalog/controller/product/search.php">
		<operation>
			<search position="after"><![CDATA[$this->load->model('tool/image');]]></search>
			<add><![CDATA[
			if (file_exists('catalog/view/theme/shopme/js/countdown/jquery.countdown_' . $this->language->get('code') . '.js')) {
		$this->document->addScript('catalog/view/theme/shopme/js/countdown/jquery.countdown_' . $this->language->get('code') . '.js');
		} else {
		$this->document->addScript('catalog/view/theme/shopme/js/countdown/jquery.countdown_en.js');
		}
		]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[$data['products'][] = array(]]></search>
			<add><![CDATA[
			// Shopme custom code starts	
			  if ((float)$result['special']) {
				$sales_percantage = ((($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')))-($this->tax->calculate($result['special'], $result['tax_class_id'], $this->config->get('config_tax'))))/(($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')))/100));
				} else {
				$sales_percantage = false;
				}
			  if ((float)$result['special']) {
    			$special_info = $this->model_catalog_product->getSpecialPriceEnd($result['product_id']);
        		$special_date_end = strtotime($special_info['date_end']) - time();
    			} else {
        		$special_date_end = false;
    			}
				$images = $this->model_catalog_product->getProductImages($result['product_id']);
            	if(isset($images[0]['image']) && !empty($images[0]['image'])){
                 $images =$images[0]['image'];
               } else {
				$images = false;
				}
				// Shopme custom code ends
			   ]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA['special'     => $special,]]></search>
			<add><![CDATA[
			// Shopme custom code starts	
			  'sales_percantage' => number_format($sales_percantage, 0, ',', '.'),
			  'special_date_end' => $special_date_end,
			  'stock_quantity' => sprintf($this->language->get('text_category_stock_quantity'), (int)$result['quantity']),
			  'thumb_hover'  => $this->model_tool_image->resize($images, $this->config->get('config_image_product_width'), $this->config->get('config_image_product_height')),
			  // Shopme custom code ends
			   ]]></add>
		</operation>
	</file>
	<file name="catalog/model/design/layout.php" error="log">
		<operation error="log">
			<search position="after"><![CDATA[
			class ModelDesignLayout extends Model {
			]]></search>
			<add>
		// Shopme code start
public function getLayoutForAllPages() {
   $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "layout
      WHERE name like '%Footer%'
      LIMIT 1");
   if ($query->num_rows) {
      return $query->row['layout_id'];
   } else {
      return 0;
   }}
// Shopme code end
			</add>
		</operation>
	</file>
	<file name="catalog/model/catalog/product.php" error="log">
		<operation error="log">
			<search position="before"><![CDATA[
			public function getTotalProductSpecials() {
			]]></search>
			<add>
		// Shopme start
	public function getSpecialPriceEnd($product_id) {
        $query = $this->db->query("SELECT date_end FROM " . DB_PREFIX . "product_special WHERE product_id = '" . (int)$product_id . "' AND customer_group_id = '" . $this->config->get('config_customer_group_id') . "' AND ((date_end = '0000-00-00 00:00:00' OR date_end > NOW())) ORDER BY priority ASC, price ASC LIMIT 1");
		if ($query->num_rows) {
            return array(
                'date_end'   => $query->row['date_end'],
            );
        } else {
            return false;
        }}
	public function getItemsSold($product_id) {
        $query = $this->db->query("SELECT COUNT(*) AS total FROM `" . DB_PREFIX . "order_product` op LEFT JOIN `" . DB_PREFIX . "order` o ON (op.order_id = o.order_id) WHERE o.order_status_id > '0' AND op.product_id = '" . (int)$product_id . "'");
        if ($query->row) {
            return $query->row['total'];
        } else {
            return false;
        }
    } 
			</add>
		</operation>
	</file>
	<file name="admin/controller/design/layout.php">
		<operation error="log">
			<search position="replace"><![CDATA[layout_form]]></search>
			<add>layout_form_shopme</add>
		</operation>
	</file>
	<file name="catalog/controller/common/search.php">
		<operation>
			<search position="before"><![CDATA[if (file_exists(DIR_TEMPLATE . $this->config->get('config_template') . '/template/common/search.tpl')) {]]></search>
			<add><![CDATA[
			$this->load->language('product/search');
		$data['text_category'] = $this->language->get('text_category');
		$this->load->model('catalog/category');
		$data['categories'] = array();
		$categories_1 = $this->model_catalog_category->getCategories(0);
		foreach ($categories_1 as $category_1) {
			$level_2_data = array();
			$categories_2 = $this->model_catalog_category->getCategories($category_1['category_id']);
			foreach ($categories_2 as $category_2) {
				$level_3_data = array();
				$categories_3 = $this->model_catalog_category->getCategories($category_2['category_id']);
				foreach ($categories_3 as $category_3) {
					$level_3_data[] = array(
						'category_id' => $category_3['category_id'],
						'name'        => $category_3['name'],
					);
				}
				$level_2_data[] = array(
					'category_id' => $category_2['category_id'],
					'name'        => $category_2['name'],
					'children'    => $level_3_data
				);
			}
			$data['categories'][] = array(
				'category_id' => $category_1['category_id'],
				'name'        => $category_1['name'],
				'children'    => $level_2_data
			);
		}
		]]></add>
		</operation>
	</file>
</modification>